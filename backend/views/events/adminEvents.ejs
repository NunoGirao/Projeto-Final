<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Eventos Administrativos</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
</head>
<body class="bg-gray-100 font-sans min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold text-gray-800 mb-6">Eventos Administrativos</h1>

        <div class="mb-6">
            <input type="text" id="searchBar" placeholder="Procurar eventos..." class="w-full p-2 border border-gray-300 rounded-md">
        </div>
        
        <div class="flex space-x-4 mb-6">
            <button id="goToCreateEvent" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                <i class="fas fa-plus mr-2"></i>Criar Evento
            </button>
            <button id="goToDashboard" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded">
                <i class="fas fa-tachometer-alt mr-2"></i>Voltar ao Painel
            </button>
        </div>

        <h2 class="text-2xl font-semibold text-gray-700 mb-4">Todos os Eventos</h2>
        <ul id="eventsList" class="space-y-4"></ul>
    </div>

    <div id="notification" class="fixed top-5 right-5 p-4 rounded-md text-white font-bold hidden"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const token = localStorage.getItem('adminToken');
            if (!token) {
                window.location.href = '/admin';
                return;
            }

            const eventsList = document.getElementById('eventsList');
            const searchBar = document.getElementById('searchBar');
            const notification = document.getElementById('notification');

            document.getElementById('goToCreateEvent').addEventListener('click', () => window.location.href = '/admin/events/create');
            document.getElementById('goToDashboard').addEventListener('click', () => window.location.href = '/admin/dashboard');

            searchBar.addEventListener('input', filterEvents);

            async function fetchEvents() {
                try {
                    const response = await fetch('/api/events', {
                        method: 'GET',
                        headers: { 'x-access-token': token }
                    });

                    if (!response.ok) throw new Error('Failed to fetch events');

                    const events = await response.json();
                    renderEvents(events);
                } catch (error) {
                    showNotification(error.message, 'error');
                }
            }

            function renderEvents(events) {
                eventsList.innerHTML = events.map(event => `
                    <li class="bg-white shadow-md rounded-lg p-4 flex justify-between items-center">
                        <a href="/admin/events/view/${event._id}" class="text-blue-600 hover:text-blue-800 font-semibold">${event.name} (${new Date(event.date).toLocaleDateString()})</a>
                        <div class="space-x-2">
                            <button onclick="editEvent('${event._id}')" class="bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1 px-3 rounded">
                                <i class="fas fa-edit mr-1"></i>Editar
                            </button>
                            <button onclick="deleteEvent('${event._id}')" class="bg-red-500 hover:bg-red-600 text-white font-bold py-1 px-3 rounded">
                                <i class="fas fa-trash-alt mr-1"></i>Eliminar
                            </button>
                        </div>
                    </li>
                `).join('');
            }

            function filterEvents() {
                const query = searchBar.value.toLowerCase();
                const events = eventsList.getElementsByTagName('li');
                Array.from(events).forEach(event => {
                    const eventName = event.getElementsByTagName('a')[0].innerText.toLowerCase();
                    event.style.display = eventName.includes(query) ? '' : 'none';
                });
            }

            window.editEvent = (id) => window.location.href = `/admin/events/edit/${id}`;

            window.deleteEvent = async (id) => {
                if (confirm('Tem certeza que deseja excluir este evento?')) {
                    try {
                        const response = await fetch(`/api/events/${id}`, {
                            method: 'DELETE',
                            headers: { 'x-access-token': token }
                        });

                        if (!response.ok) throw new Error('Falha ao excluir o evento');

                        showNotification('Evento excluÃ­do com sucesso!', 'success');
                        fetchEvents();
                    } catch (error) {
                        showNotification(error.message, 'error');
                    }
                }
            };

            function showNotification(message, type) {
                notification.textContent = message;
                notification.className = `fixed top-5 right-5 p-4 rounded-md text-white font-bold ${type === 'success' ? 'bg-green-500' : 'bg-red-500'}`;
                notification.style.display = 'block';
                setTimeout(() => notification.style.display = 'none', 3000);
            }

            fetchEvents();
        });
    </script>
</body>
</html>